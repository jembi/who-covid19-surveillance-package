{
  "name": "Covid19 DHIS2 Orchestrator",
  "description": "Endpoint for mapping the Covid19 case report into DHIS format and then forwarding it to DHIS2",
  "endpoint": {
    "pattern": "/resource-resolver-dhis"
  },
  "transformation": {
    "input": "JSON",
    "output": "JSON"
  },
  "inputValidation": {
    "type": "object",
    "properties": {
      "requestBody": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "identifier": {
                "type": "string"
              },
              "observations": {
                "type": "array"
              }
            },
            "required": ["identifier", "observations"]
          }
        },
        "required": ["data"]
      }
    },
    "required": ["requestBody"]
  },
  "inputMapping": {
    "requestBody.data.identifier": "teiIdentifier",
    "constants.program": "program",
    "constants.orgUnit": "orgUnit",
    "constants.trackedEntityType": "trackedEntityType",
    "constants.status": "event.status",
    "constants.stage": "event.programStage",

    "transforms.patinfo_ageonset": "attributes[0]",
    "requestBody.data.observations[0].value.valueQuantity.code": {
      "key": "attributes[0]",
      "transform": {
        "function": "mapCodes",
        "parameters": {
          "1072": {
            "attribute": "Rv8WM2mTuS5",
            "value": 0
          },
          "1074":{
            "attribute": "Rv8WM2mTuS5",
            "value": 0
          }
        }
      }
    },
    "transforms.patinfo_ID": "attributes[]+",
    "transforms.patinfo_sex": "attributes[]+",

    "transforms.incidentDate": {
      "key": "incidentDate",
      "transform": {
        "function": "dateTimeToDate"
      }
    },

    "transforms.patcourse_asymp": "event.dataValues[]+",
    "transforms.Comcond_any": "event.dataValues[]+",
    "transforms.expo_travel": "event.dataValues[]+",
    "transforms.patcourse_dateonset": "event.dataValues[]+",
    "transforms.patcourse_admit": "event.dataValues[]+",
    "transforms.patcourse_vent": "event.dataValues[]+",
    "transforms.patcourse_presHCF": "event.dataValues[]+",
    "transforms.patcourse_iso": "event.dataValues[]+",
    "transforms.patcourse_dateiso": "event.dataValues[]+",
    "transforms.patinfo_occuhcw": "event.dataValues[]+",
    "transforms.expo_case_location": "event.dataValues[]+",
    "transforms.expo_visit_healthcare": "event.dataValues[]+",
    "transforms.expo_contact_case": "event.dataValues[]+",
    "transforms.expo_ID1": "event.dataValues[]+",
    "transforms.expo_travel_country1": "event.dataValues[]+",
    "transforms.patcourse_icu": "event.dataValues[]+",
    "transforms.patcourse_ecmo": "event.dataValues[]+",
    "transforms.comcond_preg": "event.dataValues[]+",
    "transforms.comcond_cardi": "event.dataValues[]+",
    "transforms.comcond_diabetes": "event.dataValues[]+",
    "transforms.comcond_liver": "event.dataValues[]+",
    "transforms.comcond_neuro": "event.dataValues[]+",
    "transforms.comcond_immuno": "event.dataValues[]+",
    "transforms.comcond_renal": "event.dataValues[]+",
    "transforms.comcond_lung": "event.dataValues[]+",
    "transforms.comcond_malig": "event.dataValues[]+"
  },
  "inputTransforms": {
    "patinfo_ID": "{ 'attribute': constants.attributes.patinfo_ID, 'value': requestBody.data.identifier }",
    "patinfo_ageonset": "{ 'attribute': constants.attributes.patinfo_ageonset, 'value': requestBody.data.observations[0].value.valueQuantity.value }",
    "patinfo_sex": "{ 'attribute': constants.attributes.patinfo_sex, 'value': $lookup(constants.sexMap, requestBody.data.observations[1].value.valueCodeableConcept.coding[0].code) }",

    "incidentDate": "$now()",

    "patcourse_asymp": "{ 'dataElement': constants.dataElements.patcourse_asymp, 'value': $lookup(constants.yesNoUnknownMap, requestBody.data.observations[3].value.valueCodeableConcept.coding[0].code) }",
    "Comcond_any": "{ 'dataElement': constants.dataElements.Comcond_any, 'value': $lookup(constants.yesNoUnknownMap, requestBody.data.observations[5].value.valueCodeableConcept.coding[0].code) }",
    "expo_travel": "{ 'dataElement': constants.dataElements.expo_travel, 'value': $lookup(constants.yesNoUnknownMap, requestBody.data.observations[6].value.valueCodeableConcept.coding[0].code) }",
    "patcourse_dateonset": "{ 'dataElement': constants.dataElements.patcourse_dateonset, 'value': requestBody.data.observations[4].value.valueDateTime }",
    "patcourse_admit": "{'dataElement': constants.dataElements.patcourse_admit, 'value': $lookup(constants.yesNoUnknownMap, requestBody.data.observations[9].value.valueCodeableConcept.coding[0].code) }",
    "patcourse_vent": "{'dataElement': constants.dataElements.patcourse_vent, 'value': $lookup(constants.yesNoUnknownMap, requestBody.data.observations[11].value.valueCodeableConcept.coding[0].code) }",
    "patcourse_presHCF": "{'dataElement': constants.dataElements.patcourse_presHCF, 'value': requestBody.data.encounters[1].period.start }",
    "patcourse_iso": "{'dataElement': constants.dataElements.patcourse_iso, 'value': $lookup(constants.yesNoUnknownMap, requestBody.data.observations[13].value.valueCodeableConcept.coding[0].code) }",
    "patcourse_dateiso": "{'dataElement': constants.dataElements.patcourse_dateiso, 'value': requestBody.data.observations[13].value.component[0].valueDateTime}",
    "patinfo_occuhcw": "{'dataElement': constants.dataElements.patinfo_occuhcw, 'value': $lookup(constants.yesNoUnknownMap, requestBody.data.observations[14].value.valueCodeableConcept.coding[0].code) }",
    "expo_case_location": "{'dataElement': constants.dataElements.expo_case_location, 'value': requestBody.data.observations[17].value.component[4].valueCodeableConcept.coding[0].code}",
    "expo_visit_healthcare": "{'dataElement': constants.dataElements.expo_visit_healthcare, 'value': $lookup(constants.yesNoUnknownMap, requestBody.data.observations[16].value.valueCodeableConcept.coding[0].code) }",
    "expo_contact_case": "{'dataElement': constants.dataElements.expo_contact_case, 'value': $lookup(constants.yesNoUnknownMap, requestBody.data.observations[17].value.valueCodeableConcept.coding[0].code) }",
    "expo_ID1": "{'dataElement': constants.dataElements.expo_ID1, 'value': requestBody.data.observations[17].value.component[1].valueString}",
    "expo_travel_country1": "{'dataElement': constants.dataElements.expo_travel_country1, 'value': requestBody.data.observations[15].value.valueCodeableConcept.coding[0].code }",
    "patcourse_icu": "{'dataElement': constants.dataElements.patcourse_icu, 'value': $lookup(constants.yesNoUnknownMap, requestBody.data.observations[10].value.valueCodeableConcept.coding[0].code) }",
    "patcourse_ecmo": "{'dataElement': constants.dataElements.patcourse_ecmo, 'value': $lookup(constants.yesNoUnknownMap, requestBody.data.observations[12].value.valueCodeableConcept.coding[0].code) }",
    "comcond_preg": "{'dataElement': constants.dataElements.comcond_preg, 'value': $count($filter(requestBody.data.conditions, function($v){$v.valueCoding.code = 'PREGNANCY'})) != 0 ? 'Yes' : 'No' }",
    "comcond_cardi": "{'dataElement': constants.dataElements.comcond_cardi, 'value': $count($filter(requestBody.data.conditions, function($v){$v.valueCoding.code = 'CARDIOVASCULAR'})) != 0 ? 'Yes' : 'No' }",
    "comcond_diabetes": "{'dataElement': constants.dataElements.comcond_diabetes, 'value': $count($filter(requestBody.data.conditions, function($v){$v.valueCoding.code = 'DIABETES'})) != 0 ? 'Yes' : 'No' }",
    "comcond_liver": "{'dataElement': constants.dataElements.comcond_liver, 'value': $count($filter(requestBody.data.conditions, function($v){$v.valueCoding.code = 'HEPATOPATHY'})) != 0 ? 'Yes' : 'No' }",
    "comcond_neuro": "{'dataElement': constants.dataElements.comcond_neuro, 'value': $count($filter(requestBody.data.conditions, function($v){$v.valueCoding.code = 'CHRONICNEUROPATHY'})) != 0 ? 'Yes' : 'No' }",
    "comcond_immuno": "{'dataElement': constants.dataElements.comcond_immuno, 'value': $count($filter(requestBody.data.conditions, function($v){$v.valueCoding.code = 'IMMUNODEFICIENCY'})) != 0 ? 'Yes' : 'No' }",
    "comcond_renal": "{'dataElement': constants.dataElements.comcond_renal, 'value': $count($filter(requestBody.data.conditions, function($v){$v.valueCoding.code = 'RENOPATHY'})) != 0 ? 'Yes' : 'No' }",
    "comcond_lung": "{'dataElement': constants.dataElements.comcond_lung, 'value': $count($filter(requestBody.data.conditions, function($v){$v.valueCoding.code = 'CHRONICLUNG'})) != 0 ? 'Yes' : 'No' }",
    "comcond_malig": "{'dataElement': constants.dataElements.comcond_malig, 'value': $count($filter(requestBody.data.conditions, function($v){$v.valueCoding.code = 'MALIGNANCY'})) != 0 ? 'Yes' : 'No' }"
  },
  "requests": {
    "response": [
      {
        "primary": true,
        "id": "dhis-file-queue",
        "config": {
          "method": "POST",
          "url": "http://covid19-surveillance-file-queue-service:4002/populator",
          "headers": {
            "Content-Type": "application/json"
          }
        }
      }
    ]
  },
  "constants": {
    "program": "uYjxkTbwRNf",
    "orgUnit": "ImspTQPwCqd",
    "stage": "LpWNjNGvCO5",
    "trackedEntityType": "MCPQUTHX1Ze",
    "status": "ACTIVE",
    "attributes": {
      "patinfo_ID": "he05i8FUwu3",
      "patinfo_ageonset": "Rv8WM2mTuS5",
      "patinfo_sex": "oindugucx72"
    },
    "dataElements": {
      "patcourse_asymp": "JGnHr6WI3AY",
      "Comcond_any": "sJeIFfhX8BE",
      "expo_travel": "TzqawmlPkI5",
      "patcourse_dateonset": "s3eoonJ8OJb",
      "patcourse_admit": "CUbZcLm9LyN",
      "patcourse_vent": "BGIl7Un4Far",
      "patcourse_presHCF": "wvSTTknCxfK",
      "patcourse_iso": "XlNVazI32rG",
      "patcourse_dateiso": "GoF3NCp03q1",
      "patinfo_occuhcw": "EoOuEHmkoBv",
      "expo_case_location": "tZENxWWbaw3",
      "expo_visit_healthcare": "Q0hRqoax9c9",
      "expo_contact_case": "bNRUpHexcSf",
      "expo_ID1": "PpMq8T5hNXy",
      "expo_travel_country1": "oomj0HzoQB5",
      "patcourse_icu": "p8htbyJHydl",
      "patcourse_ecmo": "YyrtNZL59vO",
      "comcond_preg": "Bt9xOiBUuDW",
      "comcond_cardi": "IGQdwCEWqxs",
      "comcond_diabetes": "coUb4QcuVKI",
      "comcond_liver": "j6LrBVzW3k4",
      "comcond_neuro": "hcHUkwpjcDc",
      "comcond_immuno": "UmXYz5bN9is",
      "comcond_renal": "SBRCbEvwCjZ",
      "comcond_lung": "TMwKRNAYuYB",
      "comcond_malig": "IliCwhlgfJq"
    },
    "yesNoUnknownMap": {
      "Y": "Yes",
      "N": "No",
      "U": "Unknown"
    },
    "sexMap": {
      "male": "MALE",
      "female": "FEMALE"
    }
  }
}
